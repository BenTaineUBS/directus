/* stylelint-disable */
@use 'sass:color';
@use 'sass:math';

// Dark Mode
@mixin dark {
	--border-normal: #455a64;
	--border-normal-alt: #78909c;
	--border-subdued: #2e3f47;

	--foreground-normal: #b3c4cc; // Less contrast for improved hierarchy
	--foreground-normal-alt: #cfd8dc; // More contrast for titles and labels
	--foreground-subdued: #697a83;
	--foreground-inverted: #263238;

	--background-normal: #2e3c43; // #37474f
	--background-normal-alt: #3a4b53; // #455a64
	--background-subdued: #2d3a41;
	--background-highlight: #2d3a41;
	--background-page: #263238;
	--background-input: #263238;
	--background-page-rgb: 38, 50, 56;
	--background-inverted: #fff;

	// --card-shadow-color: 207,216,220;
	--card-face-color: #36454d;
	--card-shadow-color: 0, 0, 0;
	--card-shadow: 0px 0px 6px 0px rgba(var(--card-shadow-color), 0.2);
	--overlay-color: rgba(19, 24, 26, 0.9);

	// Generate all variant variables from $color-mapping list
	@each $identifier, $color in $color-mapping {
		// include alt variants for backwards compatibility
		--#{$identifier}-alt: #{mix($dark-theme-shade, $color, 90)};

		// Dark variants
		// loop from 1 to 99
		@for $i from 1 through 99 {
			// if the current value is divisible by the step variable
			@if $i % $variant-step == 0 {
				// create variable, mix colors
				--#{$identifier}-#{$i}: #{mix($dark-theme-shade, $color, 100 - $i)};
			}
		}

		// primary variable
		--#{$identifier}: #{$color};

		//Light variants
		// loop from 1 to 99
		@for $i from 1 through 99 {
			// if the current value is divisible by the step variable
			@if $i % $variant-step == 0 {
				// create variable, mix colors
				--#{$identifier}-#{100 + $i}: #{mix($dark-theme-tint, $color, $i)};
			}
		}
	}

	.alt-colors {
		--background-subdued: var(--background-page);
	}
}
