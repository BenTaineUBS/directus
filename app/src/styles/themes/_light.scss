/* stylelint-disable */
@use 'sass:color';
@use 'sass:math';

// Default / Light Mode
@mixin light {
	--border-normal: #d3dae4;
	--border-normal-alt: #a2b5cd;
	--border-subdued: #f0f4f9;

	--foreground-normal: #4f5464; // Less contrast for improved hierarchy
	--foreground-normal-alt: #172940; // More contrast for titles and labels
	--foreground-subdued: #a2b5cd;
	--foreground-inverted: #fff;

	--background-normal: #f0f4f9;
	--background-normal-alt: #e4eaf1;
	--background-subdued: #f7fafc;
	--background-highlight: #f7f9fd;
	--background-page: #ffffff;
	--background-input: #ffffff;
	--background-page-rgb: 255, 255, 255;
	--background-inverted: #263238;

	--card-face-color: #fafcfd;
	--card-shadow-color: 23, 41, 64;
	--card-shadow: 0px 0px 6px 0px rgba(var(--card-shadow-color), 0.2);
	--overlay-color: rgba(38, 50, 56, 0.9);

	// Generate all variant variables from $color-mapping list
	@each $identifier, $color in $color-mapping {
		// include alt variants for backwards compatibility
		--#{$identifier}-alt: #{mix($light-theme-tint, $color, 90)};

		// Light variants
		// loop from 1 to 99
		@for $i from 1 through 99 {
			// if the current value is divisible by the step variable
			@if $i % $variant-step == 0 {
				// create variable, mix colors
				--#{$identifier}-#{$i}: #{mix($light-theme-tint, $color, 100 - $i)};
			}
		}

		// primary variable
		--#{$identifier}: #{$color};

		//Dark variants
		// loop from 1 to 99
		@for $i from 1 through 99 {
			// if the current value is divisible by the step variable
			@if $i % $variant-step == 0 {
				// create variable, mix colors
				--#{$identifier}-#{100 + $i}: #{mix($light-theme-shade, $color, $i)};
			}
		}
	}

	.alt-colors {
		--background-subdued: var(--background-page);
	}
}
